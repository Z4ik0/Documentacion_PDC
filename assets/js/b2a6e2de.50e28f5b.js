"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[162],{1482:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Patrones_de_diseno_de_comportamiento/Chain_of_Responsability","title":"chain of responsability.","description":"Definici\xf3n.","source":"@site/docs/Patrones_de_diseno_de_comportamiento/Chain_of_Responsability.md","sourceDirName":"Patrones_de_diseno_de_comportamiento","slug":"/Patrones_de_diseno_de_comportamiento/Chain_of_Responsability","permalink":"/Documentacion_PDC/docs/Patrones_de_diseno_de_comportamiento/Chain_of_Responsability","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Patrones_de_diseno_de_comportamiento/Chain_of_Responsability.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Patrones","permalink":"/Documentacion_PDC/docs/category/patrones"},"next":{"title":"Command.","permalink":"/Documentacion_PDC/docs/Patrones_de_diseno_de_comportamiento/Command"}}');var r=a(4848),i=a(8453);const t={sidebar_position:2},o="chain of responsability.",l={},d=[{value:"Definici\xf3n.",id:"definici\xf3n",level:2},{value:"Prop\xf3sito.",id:"prop\xf3sito",level:2},{value:"Caracteristicas principales.",id:"caracteristicas-principales",level:2},{value:"Ventajas y Desventajas.",id:"ventajas-y-desventajas",level:2},{value:"Ejemplo:",id:"ejemplo",level:2},{value:"Analog\xeda:",id:"analog\xeda",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"chain-of-responsability",children:"chain of responsability."})}),"\n",(0,r.jsx)(n.h2,{id:"definici\xf3n",children:"Definici\xf3n."}),"\n",(0,r.jsx)(n.p,{children:"Chain of Responsibility es un patr\xf3n de dise\xf1o de comportamiento que te permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."}),"\n",(0,r.jsx)(n.p,{children:'El patr\xf3n de dise\xf1o cadena de responsabilidad es un patr\xf3n de comportamiento que evita acoplar el emisor de una petici\xf3n a su receptor dando a m\xe1s de un objeto la posibilidad de responder a una petici\xf3n. Para ello, se encadenan los receptores y pasa la petici\xf3n a trav\xe9s de la cadena hasta que es procesada por alg\xfan objeto. Este patr\xf3n es utilizado a menudo en el contexto de las interfaces gr\xe1ficas de usuario donde un objeto puede estar compuesto de varios objetos (que generalmente heredan de una super clase "vista"). No se debe confundir con el patr\xf3n Composite (patr\xf3n de dise\xf1o) que se basa en un concepto similar.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://refactoring.guru/images/patterns/content/chain-of-responsibility/chain-of-responsibility.png",alt:"chain"})}),"\n",(0,r.jsx)(n.p,{children:"B\xe1sicamente, este patr\xf3n ayuda a encapsular acciones secuenciales sobre un objeto. Por ejemplo, en un sistema de pedidos donde hay que realizar una secuencia de pasos para una determinada acci\xf3n. Un caso que se me ocurre es el de realizar un proceso de scoring sobre un pedido que puede partirse en distintos pasos."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://refactoring.guru/images/patterns/diagrams/chain-of-responsibility/solution1-es.png?id=122092268f688aa2015b2f20dabafb89",alt:"Chain of Responsability"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"prop\xf3sito",children:"Prop\xf3sito."}),"\n",(0,r.jsx)(n.p,{children:"Permitir que una solicitud pase a trav\xe9s de una cadena de objetos receptores hasta que uno de ellos la maneje. Este patr\xf3n desacopla al emisor de la solicitud del receptor, promoviendo una estructura flexible y extensible para manejar diferentes tipos de solicitudes."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"caracteristicas-principales",children:"Caracteristicas principales."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cadena de manejadores:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cada objeto de la cadena conoce al siguiente en la secuencia, pero no al anterior."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Desacoplamiento:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Los objetos emisores de solicitudes no necesitan conocer los detalles de los receptores."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Flexibilidad:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Se pueden a\xf1adir nuevos manejadores a la cadena sin afectar a los dem\xe1s."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://refactoring.guru/images/patterns/diagrams/chain-of-responsibility/structure.png",alt:"chain"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ventajas-y-desventajas",children:"Ventajas y Desventajas."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Ventajas"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Desventajas"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Desacoplamiento"}),": Los objetos no necesitan conocer los detalles de otros."]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Sobrecarga del mediador"}),': Puede convertirse en un "objeto Dios", dificultando su mantenimiento.']})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Extensibilidad"}),": Es f\xe1cil agregar nuevos objetos al sistema."]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Complejidad creciente"}),": La l\xf3gica del mediador se complica con m\xe1s objetos y reglas de interacci\xf3n."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Reutilizaci\xf3n"}),": Los objetos individuales son m\xe1s reutilizables."]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Dependencia del mediador"}),": Toda interacci\xf3n depende del mediador, lo que puede ser un punto de fallo."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Flexibilidad"}),": Centraliza la l\xf3gica de interacci\xf3n, simplific\xe1ndola."]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Menor flexibilidad directa"}),": Los objetos no pueden interactuar directamente aunque sea m\xe1s eficiente."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Responsabilidad centralizada"}),": Facilita la coordinaci\xf3n entre objetos."]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Riesgo de sobrecarga"}),": Si el mediador maneja demasiada l\xf3gica, puede complicar el sistema."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ejemplo",children:"Ejemplo:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"C\xf3digo de implementaci\xf3n:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:'class AbstractFilterHandler {\r\n  constructor() {}\r\napplyFilter() {\r\n    this._WARNING("applyFilter(elements, filters)");\r\n  }\r\ncanIHandle() {\r\n    this._WARNING("canIHandle(elements, filters)");\r\n  }\r\n_WARNING(fName = "unknown method") {\r\n    console.warn(\'WARNING! Function "\' + fName + \'" is not overridden in \' + this.constructor.name);\r\n  }\r\n}\r\nexport default AbstractFilterHandler;\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:'import AbstractFilterHandler from "./filter";\r\nclass ModelsFilterHandler extends AbstractFilterHandler {\r\n  applyFilter(elements, filters) {\r\n    return elements.filter(a => filters.models.includes(a.model.slug));\r\n  }\r\ncanIHandle(filters) {\r\n    return filters.models && filters.models.length > 0;\r\n  }\r\n}\r\nexport default ModelsFilterHandler;\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:'import * as Handlers from "./filters";\r\n \r\nclass FilterChain {\r\n  constructor(elements, filters) {\r\n    this.elements = elements;\r\n    this.filters = filters;\r\n    this.handlers = [];\r\n  }\r\n \r\n  /**\r\n   *\r\n   * @param {AbstractFilterHandler} filter\r\n   */\r\n  addHandler(handler) {\r\n    this.handlers.push(handler);\r\n  }\r\n \r\n  applyFilters() {\r\n    let elements = this.elements;\r\n    this.handlers.forEach(handler => {\r\n      if (handler.canIHandle(this.filters)) {\r\n        elements = handler.applyFilter(elements, this.filters);\r\n      }\r\n    });\r\n \r\n    return elements;\r\n  }\r\n}\r\nexport default FilterChain;\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"let chain = new FilterChain(elements, filters);\r\nchain.addHandler(new Handlers.ModelsFilterHandler());\r\nchain.addHandler(new Handlers.OrderByPriceFilterHandler());\r\nlet result = handler.applyFilters(elements, filters);\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"analog\xeda",children:"Analog\xeda:"}),"\n",(0,r.jsx)(n.p,{children:"Acabas de comprar e instalar una nueva pieza de hardware en tu computadora. Como eres un fan\xe1tico de la inform\xe1tica, la computadora tiene varios sistemas operativos instalados. Intentas arrancarlos todos para ver si soportan el hardware. Windows detecta y habilita el hardware autom\xe1ticamente. Sin embargo, tu querido Linux se niega a funcionar con el nuevo hardware. Ligeramente esperanzado, decides llamar al n\xfamero de tel\xe9fono de soporte t\xe9cnico escrito en la caja."}),"\n",(0,r.jsx)(n.p,{children:"Lo primero que oyes es la voz rob\xf3tica del contestador autom\xe1tico. Te sugiere nueve soluciones populares a varios problemas, pero ninguna de ellas es relevante a tu caso. Despu\xe9s de un rato, el robot te conecta con un operador humano."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://refactoring.guru/images/patterns/content/chain-of-responsibility/chain-of-responsibility-comic-1-es.png",alt:"chain"})}),"\n",(0,r.jsx)(n.p,{children:"Por desgracia, el operador tampoco consigue sugerirte nada espec\xedfico. Se dedica a recitar largos pasajes del manual, neg\xe1ndose a escuchar tus comentarios. Cuando escuchas por en\xe9sima vez la frase \u201c\xbfhas intentado apagar y encender la computadora?\u201d, exiges que te pasen con un ingeniero de verdad."}),"\n",(0,r.jsx)(n.p,{children:"Por fin, el operador pasa tu llamada a unos de los ingenieros, que probablemente ansiaba una conversaci\xf3n humana desde hac\xeda tiempo, sentado en la solitaria sala del servidor del oscuro s\xf3tano de un edificio de oficinas. El ingeniero te indica d\xf3nde descargar los drivers adecuados para tu nuevo hardware y c\xf3mo instalarlos en Linux. Por fin, \xa1la soluci\xf3n! Acabas la llamada dando saltos de alegr\xeda."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var s=a(6540);const r={},i=s.createContext(r);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);