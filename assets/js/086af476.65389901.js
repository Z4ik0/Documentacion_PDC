"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[897],{8664:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Patrones_de_diseno_de_comportamiento/Template-Method","title":"Template Method","description":"--------------","source":"@site/docs/Patrones_de_diseno_de_comportamiento/Template-Method.md","sourceDirName":"Patrones_de_diseno_de_comportamiento","slug":"/Patrones_de_diseno_de_comportamiento/Template-Method","permalink":"/Documentacion_PDC/docs/Patrones_de_diseno_de_comportamiento/Template-Method","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Patrones_de_diseno_de_comportamiento/Template-Method.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Strategy","permalink":"/Documentacion_PDC/docs/Patrones_de_diseno_de_comportamiento/Strategy"},"next":{"title":"Visitor","permalink":"/Documentacion_PDC/docs/Patrones_de_diseno_de_comportamiento/Visitor"}}');var l=n(4848),t=n(8453);const r={sidebar_position:10},i="Template Method",o={},d=[{value:"Definici\xf3n",id:"definici\xf3n",level:2},{value:"Prop\xf3sito",id:"prop\xf3sito",level:2},{value:"Caracter\xedsticas principales",id:"caracter\xedsticas-principales",level:2},{value:"Ventajas y Desventajas",id:"ventajas-y-desventajas",level:2},{value:"Ejemplo de c\xf3digo en Python",id:"ejemplo-de-c\xf3digo-en-python",level:2},{value:"Analog\xeda",id:"analog\xeda",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.header,{children:(0,l.jsx)(a.h1,{id:"template-method",children:"Template Method"})}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"definici\xf3n",children:"Definici\xf3n"}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n Template Method es un patr\xf3n de dise\xf1o de comportamiento que define el esqueleto de un algoritmo en una clase base, delegando la implementaci\xf3n de ciertos pasos a subclases. Esto permite que las subclases personalicen partes del algoritmo sin cambiar su estructura general."}),"\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.img,{src:"https://refactoring.guru/images/patterns/diagrams/template-method/structure.png",alt:"Patron Template Method"})}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"prop\xf3sito",children:"Prop\xf3sito"}),"\n",(0,l.jsx)(a.p,{children:"El prop\xf3sito de Template Method es reutilizar el c\xf3digo com\xfan y definir los pasos esenciales de un algoritmo en una clase base, dejando que las subclases implementen los detalles espec\xedficos. Esto asegura consistencia en el flujo del algoritmo mientras permite flexibilidad en los detalles."}),"\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.img,{src:"https://refactoring.guru/images/patterns/content/template-method/template-method.png",alt:"Patron Template Method"})}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"caracter\xedsticas-principales",children:"Caracter\xedsticas principales"}),"\n",(0,l.jsxs)(a.ul,{children:["\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"Definici\xf3n de un esqueleto fijo:"})}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n establece una estructura inmutable para el algoritmo en la clase base. Esto asegura que todas las subclases sigan un flujo l\xf3gico uniforme. La clase base proporciona un m\xe9todo principal (el m\xe9todo plantilla) que ejecuta los pasos del algoritmo en un orden predefinido."}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"M\xe9todos abstractos o sobrescribibles:"})}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n utiliza una combinaci\xf3n de:"}),"\n",(0,l.jsxs)(a.ul,{children:["\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"M\xe9todos abstractos: Son definidos en la clase base, pero su implementaci\xf3n est\xe1 delegada a las subclases. Esto permite que las subclases personalicen esos pasos espec\xedficos del algoritmo."}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:"M\xe9todos concretos (opcional): Pueden estar completamente implementados en la clase base y ser reutilizados por las subclases, evitando duplicaci\xf3n de c\xf3digo."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"Inmutabilidad del flujo:"})}),"\n",(0,l.jsx)(a.p,{children:"El flujo del algoritmo en el m\xe9todo plantilla no puede ser modificado por las subclases. Esto garantiza que la estructura general permanezca consistente, incluso si los detalles var\xedan. Esto asegura que el comportamiento principal no se vea afectado por errores o malas pr\xe1cticas en las subclases."}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"Promueve reutilizaci\xf3n de c\xf3digo:"})}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n ayuda a centralizar la l\xf3gica com\xfan en la clase base, eliminando redundancias entre subclases. Esto reduce la duplicaci\xf3n de c\xf3digo y facilita el mantenimiento, ya que los cambios en la l\xf3gica general se realizan \xfanicamente en la clase base."}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"Flexibilidad en los detalles:"})}),"\n",(0,l.jsx)(a.p,{children:"Aunque la estructura es fija, el patr\xf3n permite personalizaci\xf3n en los pasos individuales mediante las subclases. Esto lo hace ideal para situaciones donde se desea uniformidad en el flujo general, pero los detalles de cada paso pueden variar seg\xfan el caso."}),"\n"]}),"\n",(0,l.jsxs)(a.li,{children:["\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.strong,{children:"Uso de m\xe9todos opcionales (hooks):"})}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n puede incluir hooks o m\xe9todos opcionales en la clase base. Los hooks son m\xe9todos vac\xedos o con una implementaci\xf3n predeterminada que las subclases pueden sobrescribir para agregar comportamiento adicional, pero no est\xe1n obligadas a hacerlo."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"ventajas-y-desventajas",children:"Ventajas y Desventajas"}),"\n",(0,l.jsxs)(a.table,{children:[(0,l.jsx)(a.thead,{children:(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.th,{children:"Venajas"}),(0,l.jsx)(a.th,{children:"Desventajas"})]})}),(0,l.jsxs)(a.tbody,{children:[(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{children:"Permite reutilizar el c\xf3digo com\xfan en la clase base."}),(0,l.jsx)(a.td,{children:"Puede volverse r\xedgido si el algoritmo necesita cambios frecuentes en su estructura general."})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{children:"Facilita la extensi\xf3n del comportamiento mediante subclases."}),(0,l.jsx)(a.td,{children:"Obliga a que las subclases dependan de la clase base, creando acoplamiento."})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{children:"Simplifica el mantenimiento al centralizar el flujo del algoritmo."}),(0,l.jsx)(a.td,{children:"Puede ser dif\xedcil de entender si hay demasiadas subclases con diferentes implementaciones."})]}),(0,l.jsxs)(a.tr,{children:[(0,l.jsx)(a.td,{children:"Garantiza un flujo uniforme para todas las subclases."}),(0,l.jsx)(a.td,{children:"El abuso del patr\xf3n puede llevar a jerarqu\xedas de clases innecesariamente complejas."})]})]})]}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"ejemplo-de-c\xf3digo-en-python",children:"Ejemplo de c\xf3digo en Python"}),"\n",(0,l.jsx)(a.p,{children:"El patr\xf3n Template Method define la estructura general de un algoritmo en un m\xe9todo base (la plantilla), mientras que las subclases concretas implementan los pasos espec\xedficos. En el ejemplo, Football y Chess personalizan las etapas del juego, pero el flujo (initialize, start_play, end_play) est\xe1 controlado por la clase base."}),"\n",(0,l.jsx)(a.p,{children:"Clave: Proporciona flexibilidad para personalizar detalles mientras se mantiene un flujo fijo."}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-python",children:'from abc import ABC, abstractmethod\r\n\r\n# Clase base que define el m\xe9todo plantilla\r\nclass Game(ABC):\r\n    def play(self):\r\n        self.initialize()\r\n        self.start_play()\r\n        self.end_play()\r\n\r\n    @abstractmethod\r\n    def initialize(self):\r\n        pass\r\n\r\n    @abstractmethod\r\n    def start_play(self):\r\n        pass\r\n\r\n    @abstractmethod\r\n    def end_play(self):\r\n        pass\r\n\r\n# Subclase concreta 1\r\nclass Football(Game):\r\n    def initialize(self):\r\n        print("Football Game Initialized. Ready to start.")\r\n    \r\n    def start_play(self):\r\n        print("Football Game Started. Enjoy the game!")\r\n    \r\n    def end_play(self):\r\n        print("Football Game Finished.")\r\n\r\n# Subclase concreta 2\r\nclass Chess(Game):\r\n    def initialize(self):\r\n        print("Chess Game Initialized. Get your mind ready.")\r\n    \r\n    def start_play(self):\r\n        print("Chess Game Started. Good luck!")\r\n    \r\n    def end_play(self):\r\n        print("Chess Game Finished.")\r\n\r\n# Uso del patr\xf3n\r\ngame1 = Football()\r\ngame1.play()\r\n\r\nprint("\\n")\r\n\r\ngame2 = Chess()\r\ngame2.play()\n'})}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"analog\xeda",children:"Analog\xeda"}),"\n",(0,l.jsx)(a.p,{children:"El enfoque del m\xe9todo plantilla puede emplearse en la construcci\xf3n de viviendas en masa. El plan arquitect\xf3nico para construir una casa est\xe1ndar puede contener varios puntos de extensi\xf3n que permitir\xe1n a un potencial propietario ajustar algunos detalles de la casa resultante."}),"\n",(0,l.jsx)(a.p,{children:"Cada paso de la construcci\xf3n, como colocar los cimientos, el armaz\xf3n, construir las paredes, instalar las tuber\xedas para el agua y el cableado para la electricidad, etc., puede cambiarse ligeramente para que la casa resultante sea un poco diferente de las dem\xe1s."}),"\n",(0,l.jsx)(a.p,{children:(0,l.jsx)(a.img,{src:"https://refactoring.guru/images/patterns/diagrams/template-method/live-example.png",alt:"Template Method ilustraci\xf3n sobre analogia"})})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,l.jsx)(a,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>i});var s=n(6540);const l={},t=s.createContext(l);function r(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);